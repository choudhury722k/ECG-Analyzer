import EMD

import numpy as np 
import matplotlib.pyplot as plt

from scipy.fftpack import fft , fftshift
from scipy.signal import butter, lfilter

import tensorflow as tf

# Load TFLite model and allocate tensors.
interpreter = tf.lite.Interpreter(model_path="ECG.tflite")
# Get input and output tensors.
input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()
interpreter.allocate_tensors()
# input details
# print(input_details)
# output details
# print(output_details)

Fs = 250
beta = 0.02 
alpha = 0.05                                                                
plot = False

featureRanking = [708,635,619,546,707,636,634,558,696,618,620,713,539,1882,559,551,543,692,542,703,1880,690,552,691,715,617,550,705,695,562,547,538,613,549,541,637,641,717,545,563,1883,711,698,1879,638,564,673,540,556,706,694,560,672,1889,616,631,582,712,561,1872,716,699,714,532,1890,702,581,709,1892,704,621,710,1873,589,553,665,623,548,1870,697,693,599,567,633,721,701,723,655,531,722,555,686,676,632,544,624,597,688,598,658,727,656,568,529,537,534,677,657,642,533,577,565,596,622,583,687,630,675,557,1888,554,1874,612,719,1871,1891,601,671,524,700,730,579,528,527,566,728,726,530,1881,587,725,603,600,647,651,639,569,578,1878,654,607,643,718,525,648,615,689,526,668,667,645,1884,611,729,536,685,653,535,570,679,571,731,608,678,629,683,523,575,522,606,602,650,684,604,720,664,586,609,674,576,595,724,652,580,590,681,1900,610,646,572,669,670,1862,628,585,584,626,625,680,1864,682,1876,644,588,605,1866,574,649,1902,666,1912,1885,1893,1886,1867,1869,1895,732,660,1898,1863,659,1875,1896,640,1861,573,1860,734,593,1899,733,520,1865,1877,594,519,1897,1918,1909,614,1850,1901,661,627,1851,1887,1919,735,521,1907,1853,663,1855,1835,736,1868,592,1844,1849,591,1894,1903,1858,1922,1843,662,1911,1836,1910,1904,1927,1834,1842,1840,1859,1838,1915,1839,1852,1920,1857,1926,1921,1856,1923,1928,1825,1914,1962,1908,1906,1933,1828,1952,1925,1847,739,1944,1854,1814,1930,1917,1940,1913,1826,1946,1983,518,1957,1786,1827,1779,1924,1823,1837,1905,516,1841,1929,1817,1945,1801,1807,1805,1982,1916,1845,1936,1963,1810,1934,1961,1941,1938,1846,1778,1848,1799,1815,1833,1820,1954,517,1788,1932,1790,1830,1948,1821,1942,1959,1798,1971,1984,1782,1943,1781,1785,1931,1980,1937,1829,1977,1939,1783,1978,1811,1819,1970,1953,1792,1791,1809,1967,1935,1794,1974,1950,1808,1986,1822,1972,1824,1804,1964,1955,1832,1774,1973,1949,1787,1803,1806,1812,1947,1968,1969,1960,738,1800,514,1813,1958,1816,1981,1773,1796,737,1795,1789,1802,1979,1784,1780,1775,1831,1793,1818,1976,1975,1965,1985,740,1988,1990,1797,1987,1966,1771,1991,1776,1951,1770,1989,1956,1777,513,515,1767,1993,1772,512,1997,1769,510,741,1768,742,1994,743,1766,1996,1992,1764,1765,2002,745,1762,1995,2000,746,511,1763,1761,1999,2001,744,1760,508,1998,2005,1759,509,1758,1755,748,2004,750,747,2003,2014,504,2006,749,2012,2007,503,2011,500,1757,501,753,506,2019,2008,2015,751,1756,507,505,2017,2009,1748,1754,1751,2016,752,2020,1753,2010,1750,1730,755,1749,495,1744,757,2018,491,498,499,1743,502,493,762,2013,488,1752,760,1731,2025,754,2026,1738,1740,494,1728,2037,2023,1746,2021,490,1741,1736,2024,497,779,1747,756,1732,2027,765,764,1745,777,2032,2043,1739,1733,761,2030,482,773,1721,1729,486,2036,2034,776,1742,2028,2031,778,489,2039,1737,759,758,496,769,771,1707,763,1726,781,767,770,2033,2044,2029,480,782,1724,475,477,766,2038,2035,774,786,1719,1735,476,1725,1717,1734,789,2057,483,1727,2022,484,1720,1700,1699,2054,1691,1723,473,2049,479,806,478,2055,2053,474,487,2064,467,1722,2063,492,1718,2045,457,481,1715,1708,471,785,780,775,2048,1702,1714,2056,446,1666,1686,2073,783,795,1705,1692,772,768,485,465,470,2042,469,1684,2059,472,2050,1716,2040,2079,1709,2041,461,447,804,2058,463,784,1694,793,1675,2085,1712,456,2060,788,828,464,1661,450,2062,1706,2070,468,448,1701,1711,787,2052,790,1696,437,794,1710,438,792,454,802,791,2087,2046,2047,796,2072,801,466,414,821,800,823,453,1638,462,812,797,1688,1685,1698,1687,1670,2066,807,1682,1697,1669,2095,1585,460,803,445,2061,829,2074,805,1676,426,2071,2094,830,422,826,2084,847,432,1713,2068,2083,2082,2076,441,2096,2051,449,1677,451,818,2089,857,1703,444,1679,813,439,2123,1627,1617,423,827,2069,430,2114,369,1668,848,1652,1695,455,2065,442,808,2081,2099,2107,832,835,404,1607,2088,839,406,1693,418,1641,854,1647,2080,1683,419,408,458,427,1690,1615,810,379,401,403,844,866,1689,842,2115,864,421,1678,443,902,433,2077,824,825,428,1662,440,878,862,1648,2159,2101,2067,1637,2100,831,2110,452,1663,407,1551,833,2078,425,2103,1632,871,459,2140,809,822,415,1658,2121,893,799,368,2086,851,2139,2104,798,1643,2172,1680,351,2146,811,836,867,409,837,384,424,815,429,1630,2144,1665,1655,1672,1623,1600,394,820,1634,869,888,2143,416,817,413,2097,2091,1633,850,2142,2167,2092,1704,434,2178,1552,397,1611,1571,819,436,391,2164,2075,2221,2162,431,1636,387,845,1575,1516,838,399,1601,894,1597,258,2137,816,382,892,2117,396,398,1650,1681,2113,2098,386,2122,2181,1548,1606,849,1592,1550,2109,2111,1619,2093,1664,1640,1671,2312,2090,1620,2108,1674,410,2128,1609,385,364,355,1584,2220,918,306,906,1639,1651,256,412,885,855,884,2170,814,2118,363,2195,1659,378,1667,1657,2190,1492,2145,970,245,2155,933,292,2169,395,1626,435,874,1557,890,2158,1613,1496,1621,402,2210,341,377,375,834,2152,2136,2337,1605,1572,927,1656,2116,411,352,405,860,1568,2232,265,907,1587,2124,929,1577,872,2138,299,1646,2188,881,1625,273,2126,2211,2134,917,318,915,911,2189,889,107,865,1653,1569,317,353,2157,870,1594,2132,2112,931,1570,876,858,877,979,1649,2125,856,356,1654,1472,301,1415,1603,903,320,904,914,2173,2193,14,1561,955,2102,334,85,852,1517,1586,1595,346,2133,1612,2176,846,1614,361,973,2129,330,948,190,2141,1616,925,853,2161,1122,327,175,2163,1581,985,875,1580,920,342,1644,1673,337,228,176,323,270,840,909,1596,310,170,1136,420,1033,1188,2236,1114,389,1543,343,1053,2179,359,1629,962,1158,896,2198,1017,2197,2166,923,305,1468,1598,991,1645,390,274,380,1511,1591,388,1041,932,1628,345,2435,374,2187,1125,2254,897,1459,163,2329,1554,1660,880,336,1567,251,1313,1558,1474,989,2183,308,2213,2127,309,938,357,2224,1527,347,239,381,2182,2200,887,2240,326,1504,67,344,372,1599,225,2185,1583,2206,1409,956,1530,859,1642,367,2106,354,1427,325,284,1396,1404,2332,1589,230,2212,1520,2105,1278,1255,936,2171,295,912,2223,242,339,1030,2135,2154,863,200,1539,898,1545,2248,2294,1379,1337,297,1284,919,2130,315,1056,2324,2322,148,843,841,2261,1325,895,2333,417,2177,2180,250,1555,1441,908,1010,1477,72,1624,883,2151,31,2119,2165,1172,1502,1063,2226,2252,861,1523,968,910,1367,1590,2269,951,1532,253,2205,1191,392,1544,1538,332,1430,208,930,93,1635,1559,281,939,1343,1381,288,2253,1476,2239,2149,272,921,978,958,1025,2264,286,1509,1424,1618,967,1443,2204,1064,1442,1490,941,882,983,2302,899,2383,50,2314,971,365,313,901,1062,1562,1370,254,1631,79,60,151,279,952,900,2160,1252,1001,296,1277,1508,960,873,236,2290,2321,1622,283,1096,2283,868,2208,1231,2282,2,1610,2156,2153,289,1299,333,1391,1540,1526,366,1406,2229,2432,321,1023,2274,1588,2207,975,147,218,1336,2131,247,1072,1564,331,1057,1094,2397,943,2336,1418,360,2194,999,2202,2191,1019,120,940,9,220,48,255,172,2218,2395,949,227,2219,1035,1541,1397,1507,1456,196,224,937,984,1352,130,2414,312,319,2168,924,1307,886,2228,112,1486,1579,152,1212,117,879,1049,201,44,1512,358,1265,1327,20,173,1578,2244,2230,1604,199,1018,2315,234,263,935,2203,1519,1267,1293,2338,1480,349,2448,1193,1308,1288,2243,187,1563,1011,1087,1306,1462,2443,186,959,1345,1020,905,1608,1383,2482,1510,1514,1259,88,233,2262,63,1573,202,2393,277,2147,2186,2394,11,2439,1009,2281,362,1478,1151,393,1159,2257,1433,2376,1333,252,39,183,1439,1421,1488,1218,174,1226,1042,311,1560,1470,1498,2300,2404,1574,1458,1407,1522,1521,1602,1047,2297,2233,1073,2372,1000,287,33,184,981,2227,45,1529,49,1565,2291,2309,2433,2459,2199,94,1518,988,1593,1334,232,1372,2467,2299,2485,1553,316,226,2237,2175,2473,953,97,2408,1416,2463,290,1378,280,1410,1043,119,1221,1061,300,229,348,262,1133,2287,1348,1266,350,2483,65,2216,2268,80,324,2504,1287,993,2217,1045,2456,158,1128,946,1491,2318,25,1388,957,1243,1119,1524,1067,1357,2280,1101,2475,1157,1300,1513,128,1129,197,2468,96,235,977,2429,373,109,1420,2201,1147,165,1203,223,1201,2266,2452,2428,1247,1292,2246,2457,1081,969,105,307,1422,1279,1405,2275,248,1234,1475,2455,21,995,2447,99,1166,1289,976,1280,1088,1127,298,92,2352,1097,1382,1,66,291,972,1195,1012,1024,944,1075,2305,303,257,947,1485,2184,166,1389,328,2150,2361,1039,2351,992,1174,81,1380,2298,104,1224,1423,961,1450,2354,1425,1398,2471,1451,340,2241,1412,2234,400,1145,322,1269,1031,2303,2500,1281,54,1535,1349,2247,1322,103,1438,221,1515,1058,1261,1484,1150,2469,222,1414,1091,2487,2270,269,1356,2272,1002,1181,2492,145,1235,1027,1497,1493,180,1556,891,1124,2392,159,2326,2449,1499,2255,282,1500,162,2286,371,2424,1431,62,1194,1495,1432,1106,1354,1108,1295,1143,1089,2308,249,1366,106,1457,980,1437,207,1310,275,1080,2289,1294,35,1312,2390,259,2222,2358,1103,1026,2265,2296,30,1549,1566,1347,169,1546,990,997,195,338,1173,2120,2196,1146,945,1107,111,2450,2215,2340,1060,2360,2363,189,203,2355,2346,1040,2426,89,1006,276,2259,1187,2380,191,1169,913,1547,2317,1321,137,2418,1013,1202,185,2389,1505,132,1355,926,1290,329,1246,78,8,1071,1359,963,2480,1156,2214,177,1171,42,314,209,954,264,2277,2279,302,1429,2301,1531,2347,12,2350,2502,950,58,2420,71,2148,1051,2311,2501,1339,1324,1447,1110,1206,1254,1285,1168,2313,1126,143,2465,2493,2484,206,2477,1440,2260,942,1537,1004,29,129,2386,1164,1007,994,982,1465,2405,1239,2293,1083,1419,2379,219,1098,2258,1434,2319,285,1399,2235,1328,1200,52,1038,2369,370,6,2343,1482,139,2339,2382,1054,2316,1197,1079,2310,1059,40,1452,215,2250,1092,135,1469,1426,70,7,126,1271,213,1034,2400,2192,98,121,212,1175,1466,2460,75,1182,1582,1483,1463,19,13,1274,1003,1446,965,2491,1536,2497,2446,1453,76,231,156,115,1375,1100,124,1140,102,16,1436,2486,987,1460,83,1210,108,2267,240,1095,1160,2334,2425,47,43,1360,916,1228,2370,1479,1090,293,383,4,1276,1326,1021,1046,59,1346,2325,1309,2436,68,198,2421,1222,1148,1296,2174,1283,2348,1189,161,1393,376,138,1272,1154,1263,1179,114,1185,134,46,1207,1286,1395,1183,1402,246,136,1115,1204,1155,2391,192,1230,3,27,2378,922,204,1363,1318,2396,0,1417,1048,2430,2225,260,1282,1242,2295,1223,1015,155,2496,1130,1467,244,1069,1317,1344,2341,1350,34,211,1403,1525,966,1134,2464,2330,2284,2387,2364,2245,1084,171,2451,194,1455,266,1576,84,160,2407,1102,1487,1501,1364,1268,1086,216,2278,1542,2359,1533,1394,1070,1338,1362,1167,1374,2209,131,1449,2434,2472,1016,278,15,1369,1093,2489,36,1052,2406,1534,2238,267,2365,217,1305,2388,1386,82,1068,2377,2498,157,964,110,268,2353,2438,928,153,90,1390,2307,1264,1481,2371,1244,5,2366,1245,2328,1078,2494,2437,1273,1236,1319,2345,51,1152,2384,1270,2327,243,1506,1022,2304,1473,2344,1044,95,1304,1528,1262,164,146,2368,1298,1029,23,1248,2427,1121,32,2476,141,1342,2412,1065,238,1120,304,1109,1260,1413,1335,1229,1216,2444,1361,1331,1190,1014,1316,1489,1341,2331,2292,113,1005,1050,1184,974,2306,1444,18,1400,1232,1385,1192,1320,2256,1503,1163,2342,2285,335,241,1123,1258,1445,2507,986,1099,1387,140,1353,1032,1249,41,1464,55,2288,2490,1217,1297,2454,1220,2398,1301,125,2445,188,1085,1213,2431,193,150,1116,1384,1165,61,1237,2251,1471,2273,1074,1138,1077,1214,182,2419,1302,2335,74,122,24,294,2499,178,261,1066,1198,69,1368,2367,2271,2401,210,1392,1036,1008,1141,1227,1186,91,1104,1205,167,1238,1448,1117,2416,1323,1365,1149,2505,1170,1112,2415,1082,1209,1211,2403,2385,1315,1208,2495,10,1371,2488,86,2231,149,1113,1037,142,133,1105,1408,168,1257,2411,2356,1256,2323,2375,1177,22,17,1180,100,2481,1332,2249,2441,2478,1330,1215,1199,1411,2453,1144,2423,1196,53,154,1131,214,271,2362,1314,2410,1376,934,1428,26,116,101,1303,1111,1250,2242,2417,1028,1162,1225,123,77,127,1161,1329,144,2320,1454,1176,2263,2479,2470,1076,73,1118,2440,2474,179,2357,1241,64,37,1358,1340,2462,38,2409,118,1373,1435,2349,1494,2399,205,56,1275,2461,181,2374,996,2276,2466,1240,2503,1253,1153,1311,2373,237,2442,2458,1142,998,2413,57,1178,1055,1351,1132,2402,1401,1251,1461,2381,28,1135,2506,1233,1137,2422,1219,1291,1139,87,1377]
featureRanking = np.array(featureRanking)

NotVf = [-0.04,-0.04,-0.095,-0.105,-0.075,-0.07,-0.06,-0.065,-0.065,-0.07,-0.11,-0.075,-0.105,-0.105,-0.175,-0.13,-0.1,-0.13,-0.175,-0.22,-0.21,-0.205,-0.215,-0.26,-0.23,-0.275,-0.345,-0.385,-0.4,-0.36,-0.385,-0.29,-0.31,-0.425,-0.32,-0.365,-0.37,-0.3,-0.305,-0.29,-0.265,-0.265,-0.28,-0.245,-0.135,-0.02,0.065,0.15,0.26,0.34,0.315,0.3,0.275,0.2,0.245,0.225,0.22,0.18,0.195,0.315,0.11,-0.025,-0.02,-0.015,-0.135,-0.135,-0.115,-0.165,-0.195,-0.23,-0.215,-0.2,-0.22,-0.22,-0.235,-0.205,-0.17,-0.265,-0.18,-0.18,-0.17,-0.185,-0.18,-0.15,-0.17,-0.26,-0.395,-0.54,-0.8,-1.08,-1.31,-1.375,-0.995,-0.36,0.275,0.91,1.545,2.18,2.815,3.45,4.085,4.605,3.965,3.325,2.685,2.045,1.405,0.765,0.125,-0.38,-0.43,-0.475,-0.45,-0.515,-0.56,-0.53,-0.535,-0.55,-0.54,-0.525,-0.56,-0.55,-0.59,-0.6,-0.55,-0.535,-0.57,-0.605,-0.585,-0.58,-0.62,-0.53,-0.56,-0.525,-0.525,-0.51,-0.53,-0.5,-0.455,-0.405,-0.385,-0.36,-0.41,-0.325,-0.25,-0.27,-0.25,-0.185,-0.13,-0.085,-0.085,-0.07,-0.06,-0.05,-0.03,-0.005,0.015,0.045,0.02,-0.025,0.055,0.105,0.1,0.05,0.06,0.06,0.035,0.07,0.065,0.095,0.065,0.045,0.065,0.01,0.02,0.025,0.05,0.045,0.025,0.045,0.005,-0.03,-0.05,-0.06,-0.055,-0.125,-0.12,-0.12,-0.125,-0.15,-0.2,-0.2,-0.225,-0.255,-0.24,-0.245,-0.26,-0.25,-0.25,-0.25,-0.235,-0.25,-0.23,-0.175,-0.165,-0.18,-0.135,-0.065,0.045,0.175,0.27,0.37,0.445,0.395,0.36,0.36,0.355,0.285,0.305,0.315,0.315,0.265,0.235,0.14,0.065,-0.02,-0.045,-0.055,-0.115,-0.105,-0.1,-0.105,-0.12,-0.075,-0.11,-0.105,-0.14,-0.11,-0.12,-0.115,-0.125,-0.145,-0.125,-0.135,-0.235,-0.18,-0.17,-0.22,-0.335,-0.465,-0.705,-0.995,-1.22,-1.325,-1.065,-0.43,0.205,0.84,1.475,2.11,2.745,3.38,4.015,4.65,4.01,3.37,2.73,2.09,1.45,0.81,0.17,-0.42,-0.39,-0.465,-0.51,-0.5,-0.525,-0.53,-0.545,-0.525,-0.545,-0.54,-0.5,-0.53,-0.68,-0.77,-0.635,-0.615,-0.6,-0.56,-0.635,-0.625,-0.56,-0.53,-0.59,-0.545,-0.5,-0.53,-0.485,-0.49,-0.5,-0.38,-0.345,-0.36,-0.35,-0.31,-0.41,-0.445,-0.255,-0.185,-0.145,-0.06,-0.08,-0.07,-0.055,-0.03,0.005,0.015,0.045,0.09,0.04,0.04,0.09,0.105,0.155,0.19,0.07,0.07,0.095,0.105,0.085,0.115,0.135,0.085,0.08,0.11,0.145,0.145,0.065,0.08,-0.01,-0.025,-0.015,-0.04,-0.04,-0.095,-0.14,-0.165,-0.14,-0.175,-0.205,-0.245,-0.245,-0.29,-0.27,-0.265,-0.335,-0.32,-0.32,-0.31,-0.32,-0.335,-0.32,-0.265,-0.235,-0.205,-0.145,-0.04,0.06,0.18,0.34,0.385,0.38,0.36,0.325,0.275,0.24,0.21,0.265,0.31,0.265,0.165,0.13,0.11,-0.005,-0.055,-0.1,-0.125,-0.155,-0.175,-0.19,-0.22,-0.22,-0.19,-0.13,-0.175,-0.19,-0.14,-0.14,-0.16,-0.16,-0.19,-0.18,-0.125,-0.2,-0.225,-0.27,-0.425,-0.805,-1.005,-1.1,-1.355,-1.305,-0.845,-0.21,0.425,1.06,1.695,2.33,2.965,3.6,4.235,4.545,3.905,3.265,2.625,1.985,1.345,0.705,0.065,-0.47,-0.53,-0.53,-0.585,-0.535,-0.52,-0.49,-0.53,-0.585,-0.625,-0.63,-0.635,-0.635,-0.65,-0.67,-0.68,-0.685,-0.71,-0.715,-0.725,-0.705,-0.705,-0.76,-0.685,-0.65,-0.685,-0.705,-0.705,-0.615,-0.525,-0.48,-0.5,-0.495,-0.46,-0.405,-0.325,-0.385,-0.42,-0.345,-0.345,-0.37,-0.265,-0.265,-0.175,-0.145,-0.145,-0.135,-0.155,-0.205,-0.15,-0.085,-0.1,-0.035,-0.04,0.01,-0.015,-0.1,-0.145,-0.19,-0.115,-0.045,-0.025,0.02,0.01,-0.06,-0.085,-0.15,-0.17,-0.15,-0.1,-0.14,-0.155,-0.15,-0.12,-0.16,-0.25,-0.255,-0.24,-0.26,-0.295,-0.45,-0.605,-0.475,-0.425,-0.4,-0.33,-0.305,-0.34,-0.35,-0.365,-0.35,-0.37,-0.325,-0.34,-0.31,-0.225,-0.22,-0.285,-0.19,-0.055,0.0,0.095,0.155,0.155,0.14,0.275,0.405,0.35,0.295,0.29,0.23,0.125,0.185,0.2,0.13,0.04,-0.015,-0.065,-0.085,-0.125,-0.09,-0.09,-0.085,-0.175,-0.31,-0.255,-0.205,-0.23,-0.175,-0.135,-0.04,-0.11,-0.14,-0.11,-0.16,-0.185,-0.12,-0.09,-0.135,-0.22,-0.28,-0.41,-0.615,-0.905,-1.225,-1.315,-0.84,-0.205,0.43,1.065,1.7,2.335,2.97,3.605,4.24,4.875,4.385,3.745,3.105,2.465,1.825,1.185,0.545,-0.095,-0.3,-0.335,-0.395,-0.415,-0.42,-0.485,-0.485,-0.48,-0.5,-0.44,-0.435,-0.47,-0.51,-0.5,-0.46,-0.505,-0.54,-0.575,-0.575,-0.545,-0.52,-0.535,-0.535,-0.5,-0.51,-0.555,-0.505,-0.585,-0.52,-0.495,-0.485,-0.4,-0.38,-0.425,-0.375,-0.35,-0.33,-0.275,-0.265,-0.235,-0.185,-0.145,-0.11,-0.125,-0.105,-0.095,-0.1,-0.095,-0.065,-0.045,-0.04,-0.015,0.005,0.035,0.015,-0.035,-0.02,-0.005,-0.025,-0.025,0.035,0.035,0.035,0.005,-0.005,-0.02,-0.005,0.0,0.0,-0.035,-0.05,-0.03,-0.08,-0.11,-0.095,-0.095,-0.13,-0.11,-0.145,-0.2,-0.225,-0.21,-0.215,-0.23,-0.27,-0.255,-0.29,-0.315,-0.29,-0.25,-0.25,-0.265,-0.305,-0.265,-0.22,-0.205,-0.155,-0.145,-0.08,-0.05,0.0,0.105,0.21,0.27,0.38,0.465,0.47,0.395,0.41,0.365,0.32,0.3,0.305,0.355,0.29,0.22,0.175,0.06,0.03,0.0,-0.05,-0.07,-0.105,-0.11,-0.14,-0.13,-0.155,-0.15,-0.13,-0.175,-0.175,-0.19,-0.12,-0.125,-0.155,-0.155,-0.14,-0.14,-0.145,-0.15,-0.255,-0.35,-0.46,-0.665,-0.96,-1.165,-1.36,-1.205,-0.71,-0.075,0.56,1.195,1.83,2.465,3.1,3.735,4.37,3.995,3.355,2.715,2.075,1.435,0.795,0.155,-0.35,-0.415,-0.41,-0.465,-0.475,-0.52,-0.505,-0.51,-0.52,-0.545,-0.53,-0.545,-0.535,-0.555,-0.565,-0.575,-0.605,-0.62,-0.6,-0.6,-0.595,-0.59,-0.6,-0.55,-0.555,-0.515,-0.515,-0.5,-0.5,-0.46,-0.465,-0.39,-0.4,-0.37,-0.285,-0.3,-0.27,-0.225,-0.21,-0.185,-0.185,-0.13,-0.085,-0.085,-0.09,-0.065,-0.035,-0.045,-0.06,-0.015,0.005,0.035,0.01,-0.01,0.005,0.01,-0.02,0.005,0.01,0.035,0.045,0.025,0.025,0.0,-0.01,0.005,-0.015,-0.02,-0.035,-0.085,-0.05,-0.075,-0.08,-0.08,-0.12,-0.15,-0.175,-0.195,-0.225,-0.265,-0.28,-0.275,-0.3,-0.29,-0.3,-0.33,-0.3,-0.325,-0.36,-0.33,-0.31,-0.295,-0.26,-0.225,-0.245,-0.145,-0.085,0.085,0.185,0.26,0.365,0.32,0.315,0.275,0.28,0.245,0.225,0.24,0.255,0.23,0.21,0.09,0.045,-0.035,-0.075,-0.105,-0.14,-0.14,-0.15,-0.16,-0.185,-0.185,-0.22,-0.19,-0.15,-0.2,-0.2,-0.185,-0.205,-0.16,-0.155,-0.17,-0.17,-0.17,-0.16,-0.17,-0.31,-0.445,-0.58,-0.795,-1.06,-1.29,-1.285,-0.785,-0.15,0.485,1.12,1.755,2.39,3.025,3.66,4.295,4.035,3.395,2.755,2.115,1.475,0.835,0.195,-0.38,-0.405,-0.485,-0.475,-0.5,-0.55,-0.535,-0.545,-0.54,-0.545,-0.565,-0.565,-0.57,-0.655,-0.63,-0.62,-0.61,-0.61,-0.62,-0.67,-0.625,-0.615,-0.615,-0.585,-0.585,-0.585,-0.605,-0.535,-0.485,-0.49,-0.48,-0.43,-0.35,-0.355,-0.31,-0.27,-0.24,-0.2,-0.2,-0.11,-0.125,-0.135,-0.09,-0.095,-0.1,-0.025,0.005,-0.04,-0.06,-0.025,-0.01,-0.02,-0.035,-0.03,-0.025,-0.025,-0.105,-0.085,-0.065,-0.04,-0.02,-0.05,-0.06,-0.09,-0.07,-0.03,-0.055,-0.115,-0.115,-0.115,-0.075,-0.01,-0.15,-0.2,-0.245,-0.27,-0.26,-0.29,-0.345,-0.35,-0.345,-0.355,-0.38,-0.44,-0.42,-0.415,-0.455,-0.45,-0.455,-0.44,-0.43,-0.385,-0.395,-0.47,-0.41,-0.315,-0.22,-0.115,0.0,0.085,0.2,0.195,0.19,0.205,0.175,0.12,0.09,0.1,0.125,0.155,0.055,0.04,-0.025,-0.07,-0.145,-0.15,-0.175,-0.17,-0.235,-0.27,-0.325,-0.35,-0.285,-0.28,-0.31,-0.29,-0.28,-0.32,-0.3,-0.245,-0.24,-0.3,-0.285,-0.29,-0.295,-0.355,-0.435,-0.58,-0.7,-0.935,-1.26,-1.475,-1.34,-0.8,-0.165,0.47,1.105,1.74,2.375,3.01,3.645,4.28,4.315,3.675,3.035,2.395,1.755,1.115,0.475,-0.165,-0.53,-0.59,-0.67,-0.695,-0.64,-0.625,-0.61,-0.605,-0.675,-0.695,-0.68,-0.68,-0.685,-0.7,-0.72,-0.71,-0.715,-0.745,-0.72,-0.775,-0.75,-0.74,-0.685,-0.69,-0.69,-0.69,-0.67,-0.71,-0.69,-0.65,-0.615,-0.505,-0.54,-0.55,-0.485,-0.405,-0.425,-0.4,-0.32,-0.265,-0.295,-0.34,-0.35,-0.32,-0.31,-0.235,-0.19,-0.165,-0.16,-0.17,-0.125,-0.115,-0.095,-0.105,-0.11,-0.115,-0.105,-0.105,-0.13,-0.1,-0.07,-0.04,-0.025,-0.005,-0.045,-0.1,-0.14,-0.155,-0.14,-0.15,-0.16,-0.155,-0.14,-0.11,-0.135,-0.13,-0.2,-0.195,-0.195,-0.24,-0.28,-0.28,-0.325,-0.36,-0.35,-0.38,-0.38,-0.37,-0.34,-0.32,-0.295,-0.29,-0.305,-0.29,-0.285,-0.235,-0.235,-0.25,-0.22,-0.175,0.0,0.14,0.255,0.385,0.395,0.44,0.365,0.325,0.25,0.22,0.255,0.23,0.245,0.225,0.2,0.195,0.125,0.07,0.02,-0.07,-0.175,-0.185,-0.165,-0.13,-0.165,-0.18,-0.19,-0.17,-0.19,-0.155,-0.175,-0.25,-0.045,-0.135,-0.22,-0.175,-0.11,-0.215,-0.155,-0.12,-0.34,-0.555,-0.625,-0.88,-1.05,-1.24,-1.285,-0.89,-0.255,0.38,1.015,1.65,2.285,2.92,3.555,4.19,4.825,4.185,3.545,2.905,2.265,1.625,0.985,0.345,-0.26,-0.345,-0.355,-0.41,-0.48,-0.48,-0.515,-0.53,-0.55]
Vf = [0.505,0.55,0.51,0.53,0.49,0.455,0.4,0.36,0.28,0.165,0.045,-0.04,-0.13,-0.155,-0.19,-0.22,-0.27,-0.375,-0.495,-0.64,-0.77,-0.86,-0.97,-0.98,-1.025,-1.055,-1.065,-1.055,-1.035,-1.01,-0.96,-0.915,-0.87,-0.855,-0.82,-0.765,-0.715,-0.655,-0.59,-0.515,-0.395,-0.26,-0.14,-0.015,0.11,0.2,0.305,0.415,0.525,0.63,0.715,0.75,0.785,0.79,0.755,0.715,0.63,0.525,0.4,0.245,0.075,-0.09,-0.255,-0.33,-0.38,-0.435,-0.465,-0.505,-0.575,-0.66,-0.695,-0.755,-0.76,-0.805,-0.83,-0.865,-0.9,-0.97,-1.005,-1.045,-1.055,-1.07,-1.035,-1.005,-0.93,-0.865,-0.78,-0.69,-0.58,-0.48,-0.345,-0.225,-0.135,-0.04,0.035,0.12,0.17,0.245,0.315,0.365,0.415,0.475,0.505,0.54,0.59,0.65,0.7,0.725,0.755,0.745,0.74,0.685,0.69,0.66,0.645,0.61,0.575,0.485,0.38,0.275,0.165,0.06,-0.03,-0.105,-0.19,-0.285,-0.4,-0.5,-0.585,-0.61,-0.645,-0.625,-0.57,-0.555,-0.585,-0.605,-0.64,-0.65,-0.63,-0.6,-0.55,-0.505,-0.455,-0.375,-0.37,-0.33,-0.305,-0.31,-0.32,-0.305,-0.315,-0.31,-0.335,-0.355,-0.35,-0.33,-0.305,-0.265,-0.28,-0.245,-0.255,-0.24,-0.215,-0.185,-0.16,-0.15,-0.115,-0.1,-0.09,-0.08,-0.01,0.055,0.115,0.155,0.21,0.28,0.35,0.425,0.475,0.53,0.625,0.69,0.83,0.925,1.045,1.065,1.1,1.11,1.11,1.095,1.085,1.01,0.855,0.67,0.5,0.255,0.005,-0.22,-0.36,-0.46,-0.505,-0.55,-0.585,-0.6,-0.675,-0.67,-0.705,-0.685,-0.73,-0.735,-0.725,-0.74,-0.725,-0.7,-0.68,-0.635,-0.605,-0.585,-0.565,-0.53,-0.49,-0.395,-0.3,-0.22,-0.13,-0.07,-0.015,0.025,0.07,0.16,0.29,0.435,0.525,0.61,0.65,0.71,0.765,0.85,0.95,1.045,1.125,1.16,1.125,0.99,0.895,0.76,0.65,0.585,0.505,0.395,0.285,0.155,0.015,-0.07,-0.16,-0.185,-0.23,-0.255,-0.26,-0.28,-0.32,-0.335,-0.355,-0.345,-0.32,-0.29,-0.26,-0.25,-0.21,-0.175,-0.11,-0.035,0.07,0.165,0.27,0.37,0.48,0.545,0.655,0.72,0.82,0.86,0.87,0.855,0.82,0.785,0.685,0.62,0.605,0.58,0.55,0.475,0.41,0.325,0.28,0.26,0.185,0.11,0.05,0.02,-0.05,-0.105,-0.165,-0.215,-0.265,-0.275,-0.26,-0.23,-0.215,-0.205,-0.21,-0.175,-0.14,-0.11,-0.04,0.01,0.08,0.125,0.175,0.25,0.31,0.39,0.485,0.54,0.61,0.675,0.75,0.77,0.81,0.835,0.87,0.885,0.895,0.88,0.855,0.81,0.775,0.725,0.675,0.595,0.54,0.445,0.405,0.315,0.26,0.195,0.145,0.08,0.055,0.035,-0.01,0.005,-0.03,-0.055,-0.045,-0.02,0.0,0.015,0.015,0.055,0.05,0.075,0.12,0.165,0.235,0.27,0.325,0.34,0.385,0.455,0.55,0.685,0.805,0.915,1.035,1.09,1.125,1.1,1.085,1.07,1.09,1.075,1.08,1.06,1.01,0.93,0.795,0.685,0.56,0.455,0.355,0.275,0.215,0.145,0.065,-0.005,-0.07,-0.13,-0.17,-0.215,-0.26,-0.305,-0.33,-0.345,-0.34,-0.285,-0.25,-0.195,-0.15,-0.105,-0.05,-0.01,0.08,0.16,0.265,0.38,0.475,0.555,0.635,0.715,0.79,0.905,1.035,1.135,1.245,1.295,1.325,1.325,1.345,1.33,1.315,1.255,1.18,1.07,0.925,0.745,0.57,0.325,0.105,-0.03,-0.145,-0.21,-0.295,-0.375,-0.48,-0.54,-0.57,-0.6,-0.63,-0.62,-0.62,-0.635,-0.64,-0.64,-0.645,-0.62,-0.55,-0.51,-0.46,-0.43,-0.385,-0.335,-0.265,-0.23,-0.135,-0.025,0.08,0.195,0.285,0.37,0.42,0.505,0.585,0.66,0.705,0.695,0.68,0.64,0.625,0.595,0.585,0.595,0.575,0.55,0.465,0.385,0.315,0.285,0.28,0.245,0.255,0.24,0.24,0.205,0.175,0.165,0.175,0.155,0.15,0.14,0.11,0.11,0.095,0.06,0.02,0.0,0.005,0.02,0.04,0.06,0.08,0.09,0.11,0.145,0.18,0.205,0.205,0.195,0.18,0.145,0.15,0.17,0.23,0.26,0.275,0.295,0.28,0.245,0.235,0.19,0.16,0.115,0.075,0.005,-0.025,-0.095,-0.155,-0.195,-0.255,-0.305,-0.305,-0.33,-0.335,-0.37,-0.395,-0.4,-0.37,-0.375,-0.345,-0.315,-0.32,-0.285,-0.285,-0.24,-0.205,-0.14,-0.055,0.025,0.095,0.175,0.22,0.265,0.22,0.21,0.145,0.105,0.07,0.045,0.01,0.0,-0.01,0.015,0.04,0.04,0.04,0.055,0.065,0.115,0.16,0.165,0.17,0.145,0.155,0.185,0.185,0.195,0.24,0.25,0.28,0.28,0.29,0.33,0.33,0.33,0.28,0.225,0.17,0.115,0.07,0.03,0.01,-0.055,-0.11,-0.105,-0.12,-0.14,-0.12,-0.155,-0.21,-0.225,-0.285,-0.355,-0.415,-0.485,-0.52,-0.54,-0.57,-0.565,-0.57,-0.59,-0.585,-0.585,-0.57,-0.535,-0.55,-0.54,-0.52,-0.52,-0.535,-0.53,-0.52,-0.515,-0.48,-0.45,-0.425,-0.41,-0.36,-0.325,-0.26,-0.165,-0.09,0.01,0.12,0.235,0.345,0.47,0.58,0.635,0.69,0.69,0.685,0.66,0.605,0.55,0.49,0.415,0.34,0.275,0.195,0.125,0.025,-0.09,-0.225,-0.325,-0.415,-0.47,-0.53,-0.595,-0.645,-0.72,-0.795,-0.835,-0.875,-0.875,-0.875,-0.87,-0.9,-0.925,-0.95,-0.97,-0.965,-0.965,-1.005,-1.015,-1.025,-1.07,-1.08,-1.08,-1.035,-0.965,-0.855,-0.735,-0.6,-0.48,-0.365,-0.22,-0.13,-0.025,0.08,0.235,0.34,0.46,0.505,0.55,0.59,0.62,0.64,0.63,0.635,0.61,0.57,0.535,0.48,0.415,0.385,0.345,0.255,0.185,0.075,-0.02,-0.08,-0.16,-0.265,-0.385,-0.485,-0.56,-0.665,-0.755,-0.875,-0.99,-1.035,-1.075,-1.085,-1.1,-1.1,-1.08,-1.065,-1.005,-0.98,-0.905,-0.86,-0.84,-0.85,-0.845,-0.82,-0.785,-0.75,-0.69,-0.63,-0.55,-0.52,-0.495,-0.44,-0.41,-0.395,-0.36,-0.33,-0.25,-0.2,-0.17,-0.155,-0.14,-0.125,-0.115,-0.095,-0.095,-0.07,-0.095,-0.115,-0.12,-0.15,-0.175,-0.2,-0.2,-0.25,-0.275,-0.28,-0.32,-0.33,-0.32,-0.315,-0.3,-0.27,-0.245,-0.165,-0.13,-0.065,-0.055,-0.08,-0.15,-0.22,-0.32,-0.435,-0.545,-0.67,-0.73,-0.74,-0.765,-0.745,-0.755,-0.775,-0.81,-0.87,-0.935,-0.95,-0.955,-0.945,-0.925,-0.92,-0.915,-0.925,-0.935,-0.915,-0.92,-0.865,-0.86,-0.815,-0.79,-0.78,-0.765,-0.75,-0.75,-0.775,-0.77,-0.765,-0.74,-0.72,-0.69,-0.64,-0.61,-0.505,-0.41,-0.285,-0.15,-0.03,0.12,0.22,0.285,0.3,0.33,0.355,0.33,0.31,0.225,0.135,0.0,-0.14,-0.275,-0.355,-0.495,-0.595,-0.705,-0.815,-0.86,-0.93,-0.965,-0.975,-0.98,-1.01,-1.015,-1.045,-1.07,-1.075,-1.075,-1.085,-1.065,-1.025,-0.99,-0.99,-0.955,-0.885,-0.84,-0.8,-0.75,-0.685,-0.64,-0.6,-0.55,-0.505,-0.4,-0.29,-0.165,-0.035,0.085,0.21,0.275,0.355,0.425,0.495,0.535,0.54,0.545,0.505,0.455,0.36,0.255,0.13,0.06,0.01,-0.03,-0.095,-0.14,-0.24,-0.315,-0.395,-0.46,-0.52,-0.555,-0.58,-0.605,-0.63,-0.63,-0.615,-0.605,-0.565,-0.505,-0.475,-0.47,-0.48,-0.46,-0.5,-0.5,-0.445,-0.455,-0.415,-0.42,-0.45,-0.505,-0.555,-0.605,-0.62,-0.585,-0.55,-0.52,-0.48,-0.455,-0.42,-0.43,-0.435,-0.47,-0.48,-0.47,-0.505,-0.51,-0.55,-0.6,-0.64,-0.71,-0.72,-0.69,-0.7,-0.715,-0.71,-0.725,-0.69,-0.66,-0.635,-0.625,-0.64,-0.685,-0.725,-0.76,-0.77,-0.74,-0.71,-0.665,-0.62,-0.585,-0.565,-0.56,-0.55,-0.495,-0.445,-0.36,-0.285,-0.24,-0.185,-0.13,-0.07,-0.035,0.04,0.095,0.17,0.245,0.295,0.365,0.43,0.515,0.595,0.735,0.88,0.94,0.935,0.86,0.685,0.47,0.22,-0.035,-0.25,-0.435,-0.535,-0.63,-0.68,-0.77,-0.815,-0.845,-0.885,-0.915,-0.93,-0.96,-1.025,-1.07,-1.105,-1.13,-1.135,-1.165,-1.155,-1.145,-1.145,-1.135,-1.115,-1.08,-1.04,-0.98,-0.905,-0.875,-0.8,-0.74,-0.675,-0.59,-0.515,-0.43,-0.315,-0.24,-0.135,-0.08,0.0,0.09,0.165,0.25,0.35,0.42,0.555,0.69,0.845,1.035,1.215,1.395,1.545,1.63,1.62,1.525,1.385,1.24,1.075,0.84,0.575,0.29,-0.04,-0.31,-0.57,-0.76,-0.875,-0.955,-0.985,-1.065,-1.09,-1.15,-1.18,-1.24,-1.26,-1.285,-1.27,-1.255,-1.22,-1.195,-1.175,-1.17,-1.115,-1.09,-1.005,-0.935,-0.825,-0.75,-0.69,-0.635,-0.57,-0.495,-0.365,-0.2,-0.01,0.16,0.345,0.53,0.685,0.875,1.055,1.225,1.36,1.415,1.43,1.39,1.305,1.215,1.13,1.03,0.925,0.81,0.665,0.52,0.36,0.185,0.025,-0.065,-0.16,-0.265,-0.345,-0.44,-0.52,-0.625,-0.705,-0.78,-0.825,-0.815,-0.83,-0.86,-0.86,-0.88,-0.85,-0.785,-0.725,-0.645,-0.555,-0.475,-0.39,-0.265,-0.135,0.005,0.17,0.32,0.48,0.605,0.74,0.885,0.99,1.075,1.1,1.105,1.085,1.025,0.96,0.895,0.83,0.75,0.675,0.56,0.425,0.275,0.1,-0.105,-0.245,-0.355,-0.435,-0.465,-0.485,-0.535,-0.57,-0.625,-0.66,-0.68,-0.69,-0.69,-0.64,-0.625,-0.6,-0.535,-0.485,-0.45,-0.39,-0.29,-0.22,-0.14,-0.045,0.055,0.2,0.28,0.35,0.34,0.4,0.395,0.435,0.37,0.295,0.175,0.05,-0.07,-0.13,-0.16,-0.205,-0.215,-0.25,-0.31,-0.395,-0.495,-0.555,-0.605,-0.635,-0.63,-0.64,-0.64,-0.69,-0.73,-0.725,-0.71,-0.675,-0.65,-0.625,-0.62,-0.62,-0.6,-0.56,-0.55,-0.515,-0.475,-0.465,-0.42,-0.39,-0.38,-0.275,-0.185,-0.11,0.06,0.23,0.47,0.7,0.9,1.025,1.09,1.095,1.03,0.96,0.875,0.805,0.715,0.65,0.585,0.455,0.34,0.225,0.14]

# s = ""
# for i in NotVf:
#     s = s+ str(i)+","
# print(s)

# label = 'NotVF'
# signal = NotVf

label = 'VF'
signal = Vf

def _validate_vector(u, dtype=None):
    u = np.asarray(u, dtype=dtype, order='c')
    if u.ndim == 1:
        return u
    raise ValueError("Input vector should be 1-D.")

def _validate_weights(w, dtype=np.double):
    w = _validate_vector(w, dtype=dtype)
    if np.any(w < 0):
        raise ValueError("Input weights should be all non-negative")
    return w

def cosineSimilarity(sig1,sig2):
    '''
    Computes cosine similarity of two signals
    Arguments:
        sig1 {list} -- signal 1
        sig2 {list} -- signal 2

    Returns:
        [float] -- cosine similarity value
    '''

    if(abs(np.sum(sig1)-0.0)<1e-5 or abs(np.sum(sig2)-0.0)<1e-5):   # special case, if one of them equals zero
        return 0.0

    centered=False
    w = None

    u = _validate_vector(sig1)
    v = _validate_vector(sig2)
    if w is not None:
        w = _validate_weights(w)
    if centered:
        umu = np.average(u, weights=w)
        vmu = np.average(v, weights=w)
        u = u - umu
        v = v - vmu
    uv = np.average(u * v, weights=w)
    uu = np.average(np.square(u), weights=w)
    vv = np.average(np.square(v), weights=w)
    dist = 1.0 - uv / np.sqrt(uu * vv)

    cosine = max(0, min(np.abs(dist), 2.0))

    return  1 - cosine                         # making most similar -> 1 , least similar -> 0

filter_arduino = [0.00000,0.00000,0.00000,0.00001,0.00005,0.00022,0.00074,0.00212,0.00536,0.01205,0.02446,0.04536,0.07752,0.12298,0.18215,0.25301,0.33071,0.40763,0.47425,0.52051,0.53755,0.51943,0.46447,0.37586,0.26129,0.13180,-0.00017,-0.12298,-0.22789,-0.31051,-0.37142,-0.41563,-0.45114,-0.48692,-0.53062,-0.58669,-0.65525,-0.73195,-0.80888,-0.87622,-0.92435,-0.94585,-0.93696,-0.89832,-0.83467,-0.75378,-0.66484,-0.57655,-0.49554,-0.42522,-0.36539,-0.31264,-0.26129,-0.20483,-0.13739,-0.05500,0.04353,0.15648,0.27949,0.40643,0.53042,0.64494,0.74466,0.82589,0.88664,0.92632,0.94514,0.94358,0.92188,0.87987,0.81703,0.73298,0.62803,0.50385,0.36392,0.21372,0.06043,-0.08775,-0.22272,-0.33761,-0.42790,-0.49214,-0.53212,-0.55250,-0.55985,-0.56143,-0.56390,-0.57218,-0.58884,-0.61384,-0.64487,-0.67801,-0.70853,-0.73177,-0.74372,-0.74147,-0.72335,-0.68880,-0.63816,-0.57246,-0.49317,-0.40209,-0.30131,-0.19327,-0.08076,0.03311,0.14497,0.25149,0.34963,0.43698,0.51205,0.57442,0.62477,0.66474,0.69658,0.72281,0.74579,0.76732,0.78837,0.80896,0.82815,0.84422,0.85500,0.85819,0.85180,0.83444,0.80549,0.76512,0.71416,0.65380,0.58533,0.50988,0.42831,0.34123,0.24921,0.15293,0.05346,-0.04759,-0.14806,-0.24526,-0.33619,-0.41774,-0.48701,-0.54163,-0.58003,-0.60175,-0.60752,-0.59931,-0.58006,-0.55334,-0.52271,-0.49119,-0.46076,-0.43204,-0.40442,-0.37633,-0.34590,-0.31161,-0.27296,-0.23080,-0.18737,-0.14595,-0.11020,-0.08340,-0.06766,-0.06340,-0.06916,-0.08179,-0.09703,-0.11030,-0.11756,-0.11604,-0.10468,-0.08421,-0.05687,-0.02581,0.00560,0.03453,0.05916,0.07904,0.09502,0.10907,0.12375,0.14176,0.16537,0.19612,0.23455,0.28024,0.33195,0.38795,0.44640,0.50566,0.56463,0.62280,0.68021,0.73712,0.79369,0.84949,0.90313,0.95208,0.99268,1.02033,1.03002,1.01679,0.97635,0.90567,0.80340,0.67030,0.50946,0.32639,0.12890,-0.07337,-0.26963,-0.44907,-0.60196,-0.72100,-0.80224,-0.84570,-0.85533,-0.83835,-0.80403,-0.76215,-0.72138,-0.68798,-0.66496,-0.65195,-0.64570,-0.64113,-0.63260,-0.61521,-0.58569,-0.54296,-0.48799,-0.42339,-0.35252,-0.27880,-0.20493,-0.13258,-0.06231,0.00629,0.07420,0.14261,0.21255,0.28463,0.35891,0.43485,0.51143,0.58722,0.66065,0.73010,0.79404,0.85101,0.89949,0.93772,0.96350,0.97414,0.96666,0.93817,0.88646,0.81068,0.71185,0.59313,0.45970,0.31825,0.17617,0.04063,-0.08225,-0.18811,-0.27459,-0.34136,-0.38976,-0.42233,-0.44215,-0.45230,-0.45540,-0.45332,-0.44708,-0.43692,-0.42245,-0.40290,-0.37734,-0.34488,-0.30481,-0.25661,-0.20005,-0.13516,-0.06229,0.01783,0.10401,0.19452,0.28702,0.37859,0.46579,0.54484,0.61186,0.66319,0.69579,0.70756,0.69771,0.66700,0.61773,0.55357,0.47922,0.39976,0.32002,0.24397,0.17424,0.11190,0.05651,0.00648,-0.04046,-0.08662,-0.13383,-0.18300,-0.23391,-0.28521,-0.33462,-0.37932,-0.41634,-0.44308,-0.45765,-0.45912,-0.44768,-0.42449,-0.39146,-0.35090,-0.30513,-0.25613,-0.20530,-0.15337,-0.10042,-0.04610,0.01015,0.06883,0.13011,0.19369,0.25871,0.32379,0.38714,0.44674,0.50056,0.54675,0.58382,0.61071,0.62685,0.63208,0.62657,0.61070,0.58497,0.54995,0.50622,0.45447,0.39550,0.33034,0.26029,0.18695,0.11217,0.03799,-0.03349,-0.10029,-0.16066,-0.21319,-0.25696,-0.29152,-0.31689,-0.33346,-0.34191,-0.34309,-0.33789,-0.32718,-0.31176,-0.29228,-0.26928,-0.24317,-0.21420,-0.18250,-0.14809,-0.11091,-0.07082,-0.02761,0.01901,0.06943,0.12418,0.18380,0.24871,0.31890,0.39365,0.47115,0.54844,0.62142,0.68530,0.73517,0.76685,0.77750,0.76619,0.73397,0.68355,0.61871,0.54348,0.46139,0.37496,0.28564,0.19393,0.09997,0.00407,-0.09276,-0.18866,-0.28093,-0.36645,-0.44228,-0.50616,-0.55701,-0.59502,-0.62153,-0.63853,-0.64811,-0.65182,-0.65029,-0.64304,-0.62864,-0.60519,-0.57088,-0.52448,-0.46584,-0.39593,-0.31677,-0.23102,-0.14152,-0.05085,0.03905,0.12703,0.21275,0.29641,0.37854,0.45957,0.53955,0.61781,0.69287,0.76239,0.82329,0.87207,0.90511,0.91909,0.91126,0.87975,0.82364,0.74296,0.63868,0.51266,0.36766,0.20741,0.03667,-0.13880,-0.31241,-0.47715,-0.62622,-0.75375,-0.85554,-0.92963,-0.97646,-0.99882,-1.00126,-0.98932,-0.96863,-0.94400,-0.91879,-0.89459,-0.87118,-0.84692,-0.81937,-0.78594,-0.74455,-0.69409,-0.63460,-0.56715,-0.49351,-0.41566,-0.33534,-0.25372,-0.17132,-0.08814,-0.00399,0.08107,0.16638,0.25036,0.33053,0.40360,0.46598,0.51420,0.54557,0.55861,0.55342,0.53167,0.49639,0.45149,0.40109,0.34892,0.29780,0.24942,0.20434,0.16236,0.12292,0.08554,0.05018,0.01734,-0.01205,-0.03692,-0.05639,-0.07015,-0.07861,-0.08295,-0.08491,-0.08653,-0.08971,-0.09593,-0.10590,-0.11947,-0.13566,-0.15275,-0.16860,-0.18095,-0.18775,-0.18750,-0.17944,-0.16371,-0.14130,-0.11398,-0.08411,-0.05429,-0.02708,-0.00462,0.01170,0.02143,0.02520,0.02458,0.02179,0.01920,0.01882,0.02177,0.02788,0.03566,0.04247,0.04496,0.03978,0.02419,-0.00330,-0.04262,-0.09210,-0.14873,-0.20864,-0.26773,-0.32224,-0.36927,-0.40704,-0.43495,-0.45346,-0.46369,-0.46711,-0.46516,-0.45892,-0.44902,-0.43561,-0.41851,-0.39732,-0.37165,-0.34118,-0.30575,-0.26533,-0.22000,-0.17001,-0.11587,-0.05850,0.00053,0.05886,0.11334,0.16021,0.19555,0.21589,0.21893,0.20416,0.17325,0.13003,0.08015,0.03022,-0.01315,-0.04445,-0.06009,-0.05895,-0.04245,-0.01409,0.02120,0.05810,0.09177,0.11865,0.13691,0.14654,0.14917,0.14746,0.14458,0.14344,0.14619,0.15382,0.16606,0.18137,0.19730,0.21080,0.21873,0.21827,0.20735,0.18495,0.15124,0.10764,0.05664,0.00154,-0.05397,-0.10628,-0.15231,-0.18992,-0.21827,-0.23787,-0.25056,-0.25923,-0.26739,-0.27854,-0.29561,-0.32038,-0.35312,-0.39242,-0.43539,-0.47808,-0.51615,-0.54554,-0.56325,-0.56774,-0.55918,-0.53941,-0.51150,-0.47920,-0.44631,-0.41604,-0.39056,-0.37074,-0.35612,-0.34517,-0.33559,-0.32480,-0.31034,-0.29022,-0.26307,-0.22820,-0.18547,-0.13506,-0.07731,-0.01251,0.05911,0.13726,0.22143,0.31054,0.40265,0.49480,0.58297,0.66231,0.72754,0.77363,0.79646,0.79350,0.76423,0.71036,0.63559,0.54511,0.44482,0.34046,0.23681,0.13714,0.04301,-0.04557,-0.12963,-0.21056,-0.28949,-0.36677,-0.44172,-0.51275,-0.57762,-0.63401,-0.67993,-0.71422,-0.73670,-0.74828,-0.75072,-0.74641,-0.73792,-0.72771,-0.71777,-0.70948,-0.70353,-0.69990,-0.69800,-0.69670,-0.69441,-0.68907,-0.67824,-0.65908,-0.62858,-0.58380,-0.52231,-0.44267,-0.34480,-0.23035,-0.10265,0.03352,0.17247,0.30829,0.43554,0.54990,0.64845,0.72982,0.79395,0.84170,0.87439,0.89337,0.89974,0.89420,0.87712,0.84876,0.80944,0.75982,0.70098,0.63439,0.56174,0.48478,0.40500,0.32350,0.24086,0.15719,0.07226,-0.01425,-0.10257,-0.19263,-0.28389,-0.37532,-0.46537,-0.55209,-0.63316,-0.70610,-0.76834,-0.81750,-0.85149,-0.86883,-0.86879,-0.85161,-0.81860,-0.77214,-0.71554,-0.65278,-0.58806,-0.52535,-0.46781,-0.41740,-0.37457,-0.33825,-0.30614,-0.27520,-0.24232,-0.20503,-0.16200,-0.11336,-0.06063,-0.00632,0.04658,0.09529,0.13777,0.17308,0.20137,0.22370,0.24161,0.25662,0.26981,0.28158,0.29151,0.29858,0.30142,0.29871,0.28949,0.27347,0.25111,0.22357,0.19253,0.15997,0.12788,0.09805,0.07198,0.05078,0.03530,0.02615,0.02382,0.02861,0.04058,0.05928,0.08351,0.11105,0.13854,0.16155,0.17500,0.17375,0.15352,0.11176,0.04846,-0.03345,-0.12815,-0.22764,-0.32284,-0.40512,-0.46776,-0.50714,-0.52333,-0.51992,-0.50317,-0.48057,-0.45927,-0.44463,-0.43925,-0.44272,-0.45200,-0.46239,-0.46875,-0.46678,-0.45386,-0.42959,-0.39568,-0.35545,-0.31307,-0.27267,-0.23759,-0.20989,-0.19012,-0.17743,-0.16982,-0.16460,-0.15879,-0.14944,-0.13389,-0.10988,-0.07560,-0.02969,0.02870,0.09978,0.18291,0.27637,0.37719,0.48102,0.58235,0.67480,0.75177,0.80708,0.83574,0.83448,0.80221,0.74007,0.65130,0.54084,0.41475,0.27960,0.14188,0.00752,-0.11849,-0.23224,-0.33099,-0.41312,-0.47803,-0.52604,-0.55830,-0.57661,-0.58333,-0.58114,-0.57276,-0.56066,-0.54679,-0.53227,-0.51731,-0.50128,-0.48283,-0.46026,-0.43193,-0.39662,-0.35383,-0.30393,-0.24809,-0.18810,-0.12590,-0.06322,-0.00110,0.06037,0.12211,0.18588,0.25385,0.32796,0.40931,0.49761,0.59085,0.68532,0.77593,0.85684,0.92220,0.96692,0.98730,0.98146,0.94951,0.89347,0.81697,0.72484,0.62257,0.51580,0.40975,0.30874,0.21585,0.13276,0.05972,-0.00413,-0.06041,-0.11091,-0.15706,-0.19954,-0.23805,-0.27129,-0.29729,-0.31384,-0.31906,-0.31198,-0.29289,-0.26355,-0.22705,-0.18740,-0.14891,-0.11551,-0.09011,-0.07424,-0.06790,-0.06985,-0.07798,-0.08995,-0.10361,-0.11731,-0.12996,-0.14088,-0.14951,-0.15516,-0.15696,-0.15392,-0.14526,-0.13078,-0.11123,-0.08845,-0.06526,-0.04515,-0.03163,-0.02764,-0.03496,-0.05382,-0.08283,-0.11916,-0.15895,-0.19797,-0.23220,-0.25844,-0.27462,-0.28006,-0.27539,-0.26238,-0.24359,-0.22201,-0.20072,-0.18246,-0.16931,-0.16245,-0.16191,-0.16652,-0.17401,-0.18131,-0.18499,-0.18188,-0.16957,-0.14685,-0.11393,-0.07227,-0.02426,0.02731,0.07984,0.13136,0.18084,0.22818,0.27402,0.31942,0.36547,0.41298,0.46228,0.51323,0.56532,0.61793,0.67057,0.72302,0.77528,0.82734,0.87863,0.92746,0.97041,1.00205,1.01509,1.00117,0.95216,0.86188,0.72782,0.55253,0.34414,0.11597,-0.11508,-0.33088,-0.51491,-0.65492,-0.74488,-0.78589,-0.78565,-0.75681,-0.71449,-0.67338,-0.64516,-0.63667,-0.64912,-0.67850,-0.71695,-0.75476,-0.78257,-0.79316,-0.78267,-0.75096,-0.70111,-0.63837,-0.56875,-0.49765,-0.42887,-0.36405,-0.30271,-0.24278,-0.18138,-0.11572,-0.04384,0.03486,0.11954,0.20811,0.29775,0.38554,0.46907,0.54704,0.61951,0.68795,0.75506,0.82432,0.89930,0.98297,1.07691,1.18057,1.29075,1.40140,1.50379,1.58713,1.63970,1.65026,1.60957,1.51187,1.35590,1.14548,0.88937,0.60054,0.29489,-0.01035,-0.29844,-0.55479,-0.76836,-0.93272,-1.04634,-1.11251,-1.13843,-1.13397,-1.11008,-1.07712,-1.04346,-1.01446,-0.99210,-0.97519,-0.96020,-0.94231,-0.91667,-0.87943,-0.82849,-0.76373,-0.68687,-0.60095,-0.50960,-0.41619,-0.32319,-0.23160,-0.14080,-0.04868,0.04797,0.15275,0.26885,0.39833,0.54143,0.69620,0.85844,1.02189,1.17878,1.32052,1.43851,1.52507,1.57420,1.58228,1.54849,1.47491,1.36627,1.22939,1.07235,0.90353,0.73068,0.56022,0.39684,0.24341,0.10121,-0.02960,-0.14950,-0.25917,-0.35910,-0.44950,-0.53023,-0.60095,-0.66119,-0.71052,-0.74857,-0.77514,-0.79011,-0.79337,-0.78485,-0.76439,-0.73179,-0.68685,-0.62946,-0.55966,-0.47775,-0.38434,-0.28032,-0.16687,-0.04542,0.08238,0.21465,0.34924,0.48362,0.61484,0.73945,0.85348,0.95265,1.03257,1.08917,1.11914,1.12043,1.09262,1.03706,0.95682,0.85623,0.74035,0.61420,0.48216,0.34757,0.21264,0.07879,-0.05289,-0.18099,-0.30334,-0.41686,-0.51779,-0.60224,-0.66701,-0.71024,-0.73197,-0.73419,-0.72047,-0.69533,-0.66324,-0.62784,-0.59129,-0.55400,-0.51483,-0.47153,-0.42148,-0.36244,-0.29312,-0.21357,-0.12529,-0.03107,0.06535,0.15965,0.24739,0.32429,0.38655,0.43093,0.45494,0.45692,0.43619,0.39324,0.32997,0.24974,0.15735,0.05872,-0.03974,-0.13194,-0.21291,-0.27959,-0.33124,-0.36932,-0.39708,-0.41865,-0.43804,-0.45825,-0.48061,-0.50463,-0.52816,-0.54808,-0.56105,-0.56431,-0.55633,-0.53712,-0.50819,-0.47222,-0.43249,-0.39222,-0.35397,-0.31923,-0.28827,-0.26017,-0.23310,-0.20468,-0.17227,-0.13328,-0.08526,-0.02597,0.04656,0.13399,0.23730,0.35639,0.48943,0.63237,0.77858]
    
if __name__ == "__main__":
    
    # Choose a segment xi(n) of ECG signal of duration Te-sec containing N samples.
    window = signal[:]
    
    # 1 ) Substract the mean
    miu = np.mean(window)                                                      # mean of the signal
    signal -= miu 
            
    # 2 ) Moving average for high order noises
    step2Param = 5
    # signal2 = np.convolve(signal,np.ones(step2Param)/(step2Param*1.0), 'same')      # equivalent to moving average
    signal2 = signal

    # 3 ) High pass filter for drift suppression
    Fnyq = 0.5*Fs                                                               # nyquist frequency 
    highPassFc=1
    b, a = butter(1, highPassFc/ Fnyq , btype='highpass')                       # definition of the high pass filter
    signal3 = lfilter(b, a, signal2)

    # 4 ) Low pass filter for high frequency suppression
    lowPassFc=20
    b,a = butter(12,lowPassFc/Fnyq)                                             # definition of the high pass filter
    signal4 = lfilter(b, a, signal3)

    if plot:
        fig, axs = plt.subplots(2)
        fig.suptitle(label)
        axs[0].plot(window, color = 'red')
        axs[1].plot(signal4, color = 'red')
        plt.show()

    signal4 = np.array(filter_arduino)

    # Computing Empirical Mode Decomposition
    emd = EMD.EMD()
    IMF = emd.emd(signal4)
    print(IMF)
    print(IMF.shape)
    plot = True
    if plot:
        fig, axs = plt.subplots(2)
        fig.suptitle(label)
        axs[0].plot(IMF[0], color = 'red')
        axs[1].plot(IMF[1], color = 'red')
        plt.show()
    IMF1 = IMF[0]                                                               # first IMF 
    Vn = alpha * np.max(signal4)                                                # please refer to paper for this section
    sumIMF1sq = 0 
    sumXsq = 0

    for j in range(len(signal4)):
        if(abs(IMF1[j])<=Vn):
            sumIMF1sq += IMF1[j]**2
            sumXsq += signal4[j] ** 2

    NLCR = sumIMF1sq / sumXsq 
    if(NLCR<=beta):                                                        # still noisy
        IMF1 = IMF[0] + IMF[1]
        try:                                                               # (this is unncessary now-)
            IMF2 = IMF[1]
        except:
            IMF2 = np.zeros(len(IMF1))
        try:                                                               # (this is unncessary now-)
            IMF3 = IMF[2]
        except:
            IMF3 = np.zeros(len(IMF1))
        R = signal4 - IMF1                                                 # computing residue
    else:                                                                  # less noisy
        IMF1 = IMF[0]
        try:                                                               # (this is unncessary now-)
            IMF2 = IMF[1]
        except:
            IMF2 = np.zeros(len(IMF1))
        try:                                                               # (this is unncessary now-)
            IMF3 = IMF[2]
        except:
            IMF3 = np.zeros(len(IMF1))
        R = signal4 - IMF1 - IMF2                                          # computing residue

    if plot:
        fig, axs = plt.subplots(2)
        fig.suptitle(label)
        axs[0].plot(IMF[0], color = 'red')
        axs[1].plot(R, color = 'red')
        plt.show()

    Signal_FFT = fftshift(fft(signal4))         # computing FFT of signal
    IMF1_FFT_CMPLX = fftshift(fft(IMF1))        # computing FFT of IMF1
    R_FFT_CMPLX = fftshift(fft(R))              # computing FFT of Residue


    
    # # load features
    features = []
                
    # normalization factor
    normalization = (np.sum(np.power(np.abs(Signal_FFT), 2)) * np.sum(np.power(np.abs(IMF1_FFT_CMPLX), 2))) ** 0.5	
    print(normalization	)
    for k in range(len(Signal_FFT)):
        features.append(np.abs(Signal_FFT[k]) * np.abs(IMF1_FFT_CMPLX[k]) / normalization)
    print(features)
                
    # normalization factor
    normalization = (np.sum(np.power(np.abs(Signal_FFT), 2)) * np.sum(np.power(np.abs(R_FFT_CMPLX), 2))) ** 0.5

    for k in range(len(Signal_FFT)):
        features.append(np.abs(Signal_FFT[k]) * np.abs(R_FFT_CMPLX[k]) / normalization)

    featurePercent=24
    lenn = (len(features)*featurePercent)//100 + 1
    TrimmedX = np.zeros(lenn)      # initializing 

    for j in range(lenn):
        TrimmedX[j] = features[featureRanking[j]]
    
    TrimmedX = np.reshape(TrimmedX, (1, 601, 1))
      
    input_data = np.array(TrimmedX, dtype=np.float32)
    interpreter.set_tensor(input_details[0]['index'], input_data)

    # run the inference
    interpreter.invoke()

    # output_details[0]['index'] = the index which provides the input
    output_data = interpreter.get_tensor(output_details[0]['index'])

    print(output_data)  

    if (output_data[0][0] > 0.5):
        print("NotVF")
    else:
        print("VF")     